CREATE TABLE USERS (
    user_id BIGSERIAL NOT NULL PRIMARY KEY,
    email VARCHAR(50) NOT NULL UNIQUE,
    pw VARCHAR(50) NOT NULL,
    ssn VARCHAR(50)
);
CREATE TABLE PERSONAL_DATA (
	fname varchar(50),
    lname varchar(50),
    tax_nr varchar(50) NOT NULL,
    phone_nr VARCHAR(50) NOT NULL,
    ssn VARCHAR(50) NOT NULL,
	city VARCHAR(50) NOT NULL,
	street VARCHAR(50) NOT NULL,
	zip_code VARCHAR(50) NOT NULL,
    PRIMARY KEY (ssn)
);
CREATE TABLE TRANSACTION_IN (
	trans_id VARCHAR(50) NOT NULL,
	created_at DATE NOT NULL,
    amount VARCHAR(50) NOT NULL,
    recipient VARCHAR(50) NOT NULL,
    sender VARCHAR(50) NOT NULL,
    PRIMARY KEY (trans_id)
);
CREATE TABLE TRANSACTION_OUT (
	trans_id VARCHAR(50) NOT NULL,
	created_at DATE NOT NULL,
    amount VARCHAR(50) NOT NULL,
    recipient VARCHAR(50) NOT NULL,
    PRIMARY KEY (trans_id)
);
CREATE TABLE BANKACCOUNT (
	acc_address VARCHAR(50) NOT NULL,
	acc_number VARCHAR(50) NOT NULL,
    credit_limit VARCHAR(50) NOT NULL,
    volume VARCHAR(50) NOT NULL,
    PRIMARY KEY (acc_number)
);
CREATE TABLE EMPLOYEE (
	employee_id VARCHAR(50) NOT NULL,
	email VARCHAR(50) NOT NULL,
    ssn VARCHAR(50) NOT NULL,
    PRIMARY KEY (employee_id)
);
CREATE TABLE CONVERSATION (
	questions TEXT NOT NULL,
	answers TEXT
);
CREATE TABLE EmployeeRequest (
);
CREATE TABLE REQUEST (
	request_id VARCHAR(50) NOT NULL,
	kind VARCHAR(50) NOT NULL,
    PRIMARY KEY (request_id)
);
CREATE INDEX idx_name
ON PERSONAL_DATA (lname);

ALTER TABLE USERS ADD acc_number VARCHAR(50);
ALTER TABLE PERSONAL_DATA ADD user_id BIGINT;
ALTER TABLE TRANSACTION_IN ADD acc_number VARCHAR(50);
ALTER TABLE TRANSACTION_OUT ADD user_id BIGINT;
ALTER TABLE BANKACCOUNT ADD user_id BIGINT;
ALTER TABLE BANKACCOUNT ADD employee_id VARCHAR(50);
ALTER TABLE EmployeeRequest ADD request_id VARCHAR(50);
ALTER TABLE EmployeeRequest ADD employee_id VARCHAR(50);
ALTER TABLE REQUEST ADD user_id BIGINT;
ALTER TABLE CONVERSATION ADD request_id VARCHAR(50);

ALTER TABLE USERS ADD FOREIGN KEY (ssn) REFERENCES PERSONAL_DATA(ssn) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE USERS ADD FOREIGN KEY (acc_number) REFERENCES BANKACCOUNT(acc_number) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE PERSONAL_DATA ADD FOREIGN KEY (user_id) REFERENCES USERS(user_id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TRANSACTION_IN ADD FOREIGN KEY (acc_number) REFERENCES BANKACCOUNT(acc_number) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TRANSACTION_OUT ADD FOREIGN KEY (user_id) REFERENCES USERS(user_id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE BANKACCOUNT ADD FOREIGN KEY (user_id) REFERENCES USERS(user_id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE BANKACCOUNT ADD FOREIGN KEY (employee_id) REFERENCES EMPLOYEE(employee_id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE EmployeeRequest ADD FOREIGN KEY (request_id) REFERENCES REQUEST(request_id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE EmployeeRequest ADD FOREIGN KEY (employee_id) REFERENCES EMPLOYEE(employee_id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE REQUEST ADD FOREIGN KEY (user_id) REFERENCES USERS(user_id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE CONVERSATION ADD FOREIGN KEY (request_id) REFERENCES REQUEST(request_id) ON DELETE CASCADE ON UPDATE CASCADE;